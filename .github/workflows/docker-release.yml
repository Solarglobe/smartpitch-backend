name: Docker Release (GHCR)

on:
  release:
    types: [published]   # à chaque release publiée (par semantic-release)

permissions:
  contents: read
  packages: write        # nécessaire pour pousser sur GHCR

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare vars (lowercase owner & image)
        id: prep
        run: |
          OWNER="${GITHUB_REPOSITORY_OWNER}"
          IMAGE="smartpitch-backend"
          echo "owner_lc=${OWNER,,}" >> $GITHUB_OUTPUT
          echo "image=${IMAGE,,}" >> $GITHUB_OUTPUT
          # tag de release (ex: v1.4.2) + variante sans 'v'
          TAG="${GITHUB_REF_NAME:-${GITHUB_EVENT_RELEASE_TAG_NAME}}"
          TAG="${TAG:-${{ github.event.release.tag_name }}}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "tag_clean=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.prep.outputs.owner_lc }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.tag }}
            ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.tag_clean }}
            ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ steps.prep.outputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
