name: Docker Release (GHCR)

on:
  release:
    types: [published]     # auto à chaque release publiée (semantic-release)
  workflow_dispatch:       # bouton "Run workflow" (facultatif pour tester)

permissions:
  contents: read
  packages: write          # obligatoire pour pousser sur GHCR

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare vars (owner/image/tag)
        id: prep
        run: |
          OWNER="${GITHUB_REPOSITORY_OWNER}"
          IMAGE="smartpitch-backend"
          # tag de release (ex: v1.5.0) -> garde tel quel + version sans 'v'
          RAW_TAG="${{ github.event.release.tag_name }}"
          CLEAN_TAG="${RAW_TAG#v}"
          # fallback si déclenchement manuel sans release attachée
          if [ -z "$RAW_TAG" ]; then
            RAW_TAG="manual-test"
            CLEAN_TAG="manual-test"
          fi
          echo "owner_lc=${OWNER,,}"        >> $GITHUB_OUTPUT
          echo "image=${IMAGE,,}"           >> $GITHUB_OUTPUT
          echo "tag_raw=${RAW_TAG}"         >> $GITHUB_OUTPUT
          echo "tag_clean=${CLEAN_TAG}"     >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.prep.outputs.owner_lc }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.tag_raw }}
            ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.tag_clean }}
            ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ steps.prep.outputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
